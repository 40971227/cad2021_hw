<h1>About</h1>
<p>本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁.</p>
<hr/>
<p>40971227</p>
<p>網站倉儲: <a href="https://github.com/40971227/cad2021_hw">https://github.com/40971227/cad2021_hw</a></p>
<p>網站連結: <a href="https://40971227.github.io/cad2021_hw/">https://40971227.github.io/cad2021_hw/</a></p>
<p>其他與作者或作業相關資料說明或介紹</p>
<h1>Task</h1>
<h2>hwpages</h2>
<p>cad2b w2 github account</p>
<p>倉儲          網站<br/><a href="https://github.com/40923234/cad2021_hw">40723126</a><a href="https://40723126.github.io/cad2021_hw">40723126</a><br/><a href="https://github.com/40723135/cad2021_hw">40723135</a><a href="https://40723135.github.io/cad2021_hw">40723135</a><br/><a href="https://github.com/40723217/cad2021_hw">40723217 </a><a href="https://40723217.github.io/cad2021_hw">40723217</a><br/><a href="https://github.com/40732331/cad2021_hw">40732331 </a><a href="https://40732331.github.io/cad2021_hw">40732331</a><br/><a href="https://github.com/40823114/cad2021_hw">40823114 </a><a href="https://40723114.github.io/cad2021_hw">40823114</a><br/><a href="https://github.com/40823115/cad2021_hw">40823115 </a><a href="https://40823115.github.io/cad2021_hw">40823115</a><br/><a href="https://github.com/40823117/cad2021_hw">40823117 </a><a href="https://pyc40823117.github.io/cad2021_hw">pyc40823117</a><br/><a href="https://github.com/40823119/cad2021_hw">40823119 </a><a href="https://40823117.github.io/cad2021_hw">40823117</a><br/><a href="https://github.com/40823122/cad2021_hw">40823122 </a><a href="https://40823122.github.io/cad2021_hw">40823122</a><br/><a href="https://github.com/40823127/cad2021_hw">40823127 </a><a href="https://40823127.github.io/cad2021_hw">40823127</a><br/><a href="https://github.com/40823146/cad2021_hw">40823146 </a><a href="https://40823146.github.io/cad2021_hw">40823146</a><br/><a href="https://github.com/40823148/cad2021_hw">40823148 </a><a href="https://40823148.github.io/cad2021_hw">40823148</a><br/><a href="https://github.com/40823215/cad2021_hw">40823215 </a><a href="https://40823215.github.io/cad2021_hw">40823215</a><br/><a href="https://github.com/40871106/cad2021_hw">40871106 </a><a href="https://40871106.github.io/cad2021_hw">40871106</a><br/><a href="https://github.com/40923201/cad2021_hw">40923201 </a><a href="https://40923201.github.io/cad2021_hw">40923201</a><br/><a href="https://github.com/40923203/cad2021_hw">40923203 </a><a href="https://youshin40923203.github.io/cad2021_hw">youshin40923203</a><br/><a href="https://github.com/40923204/cad2021_hw">40923204 </a><a href="https://40923204.github.io/cad2021_hw">40923204</a><br/><a href="https://github.com/40923205/cad2021_hw">40923205 </a><a href="https://40923205.github.io/cad2021_hw">40923205</a><br/><a href="https://github.com/40923206/cad2021_hw">40923206 </a><a href="https://40923206-1.github.io/cad2021_hw">40923206-1</a><br/><a href="https://github.com/40923207/cad2021_hw">40923207 </a><a href="https://40923207.github.io/cad2021_hw">40923207</a><br/><a href="https://github.com/40923208/cad2021_hw">40923208 </a><a href="https://nfu40923208.github.io/cad2021_hw">nfu40923208</a><br/><a href="https://github.com/40923209/cad2021_hw">40923209 </a><a href="https://nfu40923209.github.io/cad2021_hw">nfu40923209</a><br/><a href="https://github.com/40923210/cad2021_hw">40923210 </a><a href="https://40923210.github.io/cad2021_hw">40923210</a><br/><a href="https://github.com/40923211/cad2021_hw">40923211 </a><a href="https://a40923211.github.io/cad2021_hw">a40923211</a><br/><a href="https://github.com/40923212/cad2021_hw">40923212 </a><a href="https://40923212.github.io/cad2021_hw">40923212</a><br/><a href="https://github.com/40923213/cad2021_hw">40923213 </a><a href="https://40923213.github.io/cad2021_hw">40923213</a><br/><a href="https://github.com/40923214/cad2021_hw">40923214 </a><a href="https://40923214.github.io/cad2021_hw">40923214</a><br/><a href="https://github.com/40923216/cad2021_hw">40923216 </a><a href="https://40923216.github.io/cad2021_hw">40923216</a><br/><a href="https://github.com/40923217/cad2021_hw">40923217 </a><a href="https://40923217.github.io/cad2021_hw">40923217</a><br/><a href="https://github.com/40923218/cad2021_hw">40923218 </a><a href="https://40923218.github.io/cad2021_hw">40923218</a><br/><a href="https://github.com/40923219/cad2021_hw">40923219 </a><a href="https://nfu40923219.github.io/cad2021_hw">nfu40923219</a><br/><a href="https://github.com/40923220/cad2021_hw">40923220 </a><a href="https://40923220.github.io/cad2021_hw">40923220</a><br/><a href="https://github.com/40923221/cad2021_hw">40923221 </a><a href="https://40923221.github.io/cad2021_hw">40923221</a><br/><a href="https://github.com/40923223/cad2021_hw">40923223 </a><a href="https://40923223.github.io/cad2021_hw">40923223</a><br/><a href="https://github.com/40923224/cad2021_hw">40923224 </a><a href="https://s40923224.github.io/cad2021_hw">s40923224</a><br/><a href="https://github.com/40923224/cad2021_hw">40923225 </a><a href="https://40923225.github.io/cad2021_hw">40923225</a><br/><a href="https://github.com/40923226/cad2021_hw">40923226 </a><a href="https://40923226.github.io/cad2021_hw">40923226</a><br/><a href="https://github.com/40923227/cad2021_hw">40923227 </a><a href="https://40923227.github.io/cad2021_hw">40923227</a><br/><a href="https://github.com/40923228/cad2021_hw">40923228 </a><a href="https://40923228.github.io/cad2021_hw">40923228</a><br/><a href="https://github.com/40923229/cad2021_hw">40923229 </a><a href="https://40923229.github.io/cad2021_hw">40923229</a><br/><a href="https://github.com/40923230/cad2021_hw">40923230 </a><a href="https://40923230.github.io/cad2021_hw">40923230</a><br/><a href="https://github.com/40923231/cad2021_hw">40923231 </a><a href="https://40923231.github.io/cad2021_hw">40923231</a><br/><a href="https://github.com/40923232/cad2021_hw">40923232</a><a href="https://40923232.github.io/cad2021_hw">40923232</a><br/><a href="https://github.com/40923233/cad2021_hw">40923233 </a><a href="https://40923233.github.io/cad2021_hw">40923233</a><br/><a href="https://github.com/40923234/cad2021_hw">40923234 </a><a href="https://40923234.github.io/cad2021_hw">40923234</a><br/><a href="https://github.com/40923235/cad2021_hw">40923235 </a><a href="https://40923235.github.io/cad2021_hw">40923235</a><br/><a href="https://github.com/40923236/cad2021_hw">40923236 </a><a href="https://40923236.github.io/cad2021_hw">40923236</a><br/><a href="https://github.com/40923237/cad2021_hw">40923237 </a><a href="https://40923237.github.io/cad2021_hw">40923237</a><br/><a href="https://github.com/40923238/cad2021_hw">40923238 </a><a href="https://40923238.github.io/cad2021_hw">40923238</a><br/><a href="https://github.com/40923239/cad2021_hw">40923239 </a><a href="https://40923239.github.io/cad2021_hw">40923239</a><br/><a href="https://github.com/40923240/cad2021_hw">40923240 </a><a href="https://40923240.github.io/cad2021_hw">40923240</a><br/><a href="https://github.com/40923241/cad2021_hw">40923241 </a><a href="https://40923241.github.io/cad2021_hw">40923241</a><br/><a href="https://github.com/40923242/cad2021_hw">40923242 </a><a href="https://40923242.github.io/cad2021_hw">40923242</a><br/><a href="https://github.com/40923243/cad2021_hw">40923243 </a><a href="https://40923243.github.io/cad2021_hw">40923243</a><br/><a href="https://github.com/40923244/cad2021_hw">40923244 </a><a href="https://40923244.github.io/cad2021_hw">40923244</a><br/><a href="https://github.com/40923245/cad2021_hw">40923245 </a><a href="https://40923245-1.github.io/cad2021_hw">40923245-1</a><br/><a href="https://github.com/40923246/cad2021_hw">40923246 </a><a href="https://40923246.github.io/cad2021_hw">40923246</a><br/><a href="https://github.com/40923247/cad2021_hw">40923247 </a><a href="https://40923247.github.io/cad2021_hw">40923247</a><br/><a href="https://github.com/40923248/cad2021_hw">40923248 </a><a href="https://40923248.github.io/cad2021_hw">40923248</a><br/><a href="https://github.com/40923249/cad2021_hw">40923249 </a><a href="https://40923249-1.github.io/cad2021_hw">40923249-1</a><br/><a href="https://github.com/40923250/cad2021_hw">40923250 </a><a href="https://40923250.github.io/cad2021_hw">40923250</a><br/><a href="https://github.com/40923251/cad2021_hw">40923251 </a><a href="https://40923251.github.io/cad2021_hw">40923251</a><br/><a href="https://github.com/40923252/cad2021_hw">40923252 </a><a href="https://40923252.github.io/cad2021_hw">40923252</a><br/><a href="https://github.com/40923253/cad2021_hw">40923253 </a><a href="https://40923253.github.io/cad2021_hw">40923253</a><br/><a href="https://github.com/40971220/cad2021_hw">40971220 </a><a href="https://40971220.github.io/cad2021_hw">40971220</a><br/><a href="https://github.com/40971227/cad2021_hw">40971227 </a><a href="https://40971227.github.io/cad2021_hw">40971227</a></p>
<h1>HW1</h1>
<p>HW1 佔學期成績 25%</p>
<p><span style="background-color: #ffff99;">HW1 必須在 2021.11.10 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/5">HW1 具體項目成果回報區</a>將於 2021.09.23 開啟, 於 <span style="background-color: #ff99cc;">2021.11.10 22:00 關閉.</span></p>
<h4>作業一: meArm Robot 零件繪圖與機電運動模擬場景製作</h4>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step1</span>: 下載 <a href="https://drive.google.com/file/d/18ukdNlFB9yHY-FZSY-bTnzrPrNv0FE4D/view?usp=sharing">meARM.7z</a> 這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊.</p>
<p style="padding-left: 60px;"><a href="/downloads/meArm_75-0040_v1.pdf">meArm_75-0040_v1.pdf</a> 則是另外一本組立參考手冊.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step2</span>: 從課程網頁中的 <a href="https://mde.tw/cad2021/content/Compile%20CoppeliaSim.html">Compile CoppeliaSim 頁面</a>, 下載 <a href="https://drive.google.com/file/d/1hV8hHjjnLvUp-AEjd2iCfBYk067WSjcy/view?usp=sharing">coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z</a> (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step3</span>: 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,  經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件<a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">匯入</a> CoppeliaSim 進行組裝配置後, 以 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制 meArm Robot 各軸的旋轉作動.</p>
<p style="padding-left: 30px;">2b CAD 套件分配結果: <a href="https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt">https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt</a></p>
<h4>附件:</h4>
<p style="padding-left: 30px;">1. CAD 套件分配表:</p>
<p style="padding-left: 60px;">sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination.py">2a 套件亂數分配結果</a></p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination_b.py">2b 套件亂數分配結果</a></p>
<p style="padding-left: 30px;">2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用 <a href="https://www.coppeliarobotics.com/helpFiles/en/shapeEditModes.htm">shape edit modes</a> 轉為 <a href="https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm">clean model</a>, 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes).</p>
<p style="padding-left: 30px;">3. meARM Robot <a href="https://www.youtube.com/watch?v=YdhpMqNa_mE">動態模擬場景</a>的建構, 可參考 <a href="https://www.youtube.com/watch?v=ucO0v5iel-c">0</a>, <a href="https://www.youtube.com/watch?v=jeviAIlh7wY">1</a>, <a href="https://www.youtube.com/watch?v=MrmHoGa3Kg4">2</a>, <a href="https://www.youtube.com/watch?v=43-xyipH9Ss">3</a>, <a href="https://www.youtube.com/watch?v=i9e4GXov8rk">4</a>, <a href="https://www.youtube.com/watch?v=7f1jzC6Uptg">5</a>, <a href="https://www.youtube.com/watch?v=xadyMQJxjnw">6</a>, <a href="https://www.youtube.com/watch?v=SQhKlnNnzuQ">7</a>, 也可參考 <a href="https://github.com/mdecourse/models/blob/master/robots/non-mobile/uarm.ttm">Uarm Robot model</a> 與相關<a href="https://www.youtube.com/watch?v=OqPVK__z9Ek">影片</a>.</p>
<p style="padding-left: 30px;">4. CoppeliaSim design dynamic simulations <a href="https://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">說明頁面</a>.</p>
<p style="padding-left: 30px;">5. <a href="https://mde.tw/cad2021/downloads/lua/index.html">網際 Lua</a> 程式執行.</p>
<p style="padding-left: 30px;">6. <a href="/downloads/meArm.slvs">meArm.slvs</a>, <a href="/downloads/meArm_in_solvespace.slvs">meArm_in_solvespace.slvs</a></p>
<p style="padding-left: 30px;">7. UI 介面程式參考:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function closeEventHandler(h)
    sim.addLog(sim.verbosity_scriptinfos,'Window '..h..' is closing...')
    simUI.hide(h)
end

function joint1_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta1 set to '..newVal)
    sim.setJointTargetPosition(joint1, newVal*deg)
end

function joint2_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta2 set to '..newVal)
    sim.setJointTargetPosition(joint2, newVal*deg)
end

function joint3_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta3 set to '..newVal)
    sim.setJointTargetPosition(joint3, newVal*deg)
end

function joint16_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta16 set to '..newVal)
    sim.setJointTargetPosition(joint16, newVal*deg)
    sim.setJointTargetPosition(joint20, -newVal*deg)
end

function sysCall_init()
    -- do some initialization here
    joint1 = sim.getObjectHandle('motor1')
    joint2 = sim.getObjectHandle('motor2')
    joint3 = sim.getObjectHandle('motor3')
    joint16 = sim.getObjectHandle('motor16')
    joint20 = sim.getObjectHandle('motor20')
    i = 0
    deg = math.pi/180
    print(i)
    xml = [[
&lt;ui closeable="true" on-close="closeEventHandler" resizable="true"&gt;
    &lt;label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" /&gt;
    &lt;tabs&gt;
        &lt;tab title="Numeric"&gt;a
            &lt;label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" /&gt;
            &lt;label text="" id="3000" wordwrap="true" /&gt;
            &lt;label text="theta1" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="360" on-change="joint1_rotate" /&gt;
            &lt;label text="theta2" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="65" on-change="joint2_rotate" /&gt;
            &lt;label text="theta3" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="185" on-change="joint3_rotate" /&gt;
            &lt;label text="theta16" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="15" on-change="joint16_rotate" /&gt;
        &lt;/tab&gt;
    &lt;/tabs&gt;
&lt;/ui&gt;
]]
    ui=simUI.create(xml)
    
end</pre>
<p><img alt="" class="add_border" height="282" src="/images/meArm_linkage_dimension.png" width="600"/></p>
<p>(From: <a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a>)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2pFReCfDZsU" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h4>solvespace運動場景</h4>
<h4><br/><span>onshape</span><span>運動場景</span></h4>
<h2>W13</h2>
<h3>meArm模擬</h3>
<script>
var winkVideoData = {
 <script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="./../downloads/mearm_wink.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h3>匯入CoppeliaSim</h3>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="./../downloads/W13-1.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h3>零件</h3>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="./../downloads/W13.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>solvespace</h2>
<p><span>2013 年在Libre Graphics World上</span><span><span>發表了對開發人員的簡短評論和採訪</span><span>。這篇評論稱讚 SolveSpace 的可執行文件小、先進的約束求解器和輸出格式範圍。</span><span>同一篇評論指出了一些缺點，主要是它對 NURBS 布爾值的緩慢和有限的處理以及缺乏原生 Linux 支持。</span></span><span><span>但是，此後添加了本地 Linux 支持。</span></span></p>
<p><span><span></span></span></p>
<p><span><span>以前同樣由 Westhues 開發的名為 SketchFlat 的軟件包已被 SolveSpace 取代。</span></span></p>
<p><span><span></span></span></p>
<h3>solvespace運動場景</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/n3bFUjmmxKA" width="560"></iframe></p>
<h3>solvespace下載方法</h3>
<p><a href="https://youtu.be/z1pvsTnX8Mw">https://youtu.be/z1pvsTnX8Mw</a></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/z1pvsTnX8Mw" width="560"></iframe></p>
<h3>solvespace操作方法</h3>
<h4>快捷指令介紹</h4>
<h5>幾何</h5>
<p>S 直線<br/>R 矩形<br/>C 圓形<br/>P 點<br/>Shift+X 擠出<br/><span>Shift+L 迴轉</span></p>
<h5>視角</h5>
<p>W 正視 (指定或編輯面)<br/>F2 正視 (與螢幕最接近平行的工作面轉正)<br/>F3 等角</p>
<h5>約束指令</h5>
<p>M 中心<br/>D 標註(直線)<br/>N 標註(角度)<br/>Q 等長<br/>H 水平<br/>V 垂直<br/>L 平行<br/>O 重合<br/>[ 垂直</p>
<p></p>
<h2>onshape</h2>
<p>● 2012年11月，SolidWorks的前任首席執行官喬恩·希施蒂克（Jon Hirschtick）和約翰·麥克利尼（John McEleney）領導了一個由六位聯合創始人組成的團隊，發起了Belmont Technology，該公司的佔位符名稱後來更改為Onshape。該公司的第一輪融資來自北橋風險投資公司（North Bridge Venture Partners）和聯邦資本（Commonwealth Capital）的900萬美元。</p>
<p><span>● </span>在與52個國家/地區的1000多名CAD專業人員進行了生產前測試之後，2015年3月，Onshape發布了其Cloud CAD軟件的公開測試版。測試版中包括用於iPhone的Onshape。</p>
<p><span>● 2015年8月，該公司發布了適用於Android應用的Onshape。</span></p>
<p><span>● 2015年12月，Onshape發布了其完整的商業版本。[14] Onshape App Store與24個開發人員合作夥伴一起啟動。</span></p>
<p><span>● 2016年4月，Onshape推出了其教育計劃，其中包括面向大學生和教育工作者的免費版本的Onshape Professional。</span></p>
<p><span>● 2016年5月，Onshape發布了FeatureScript，這是一種新的開源（由MIT許可）的編程語言，用於創建和自定義CAD功能。</span></p>
<p><span>● 2019年10月，Onshape同意被收購。</span></p>
<p><span></span></p>
<h3>onshape運動場景</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KM4dwbBCp-k" width="560"></iframe></p>
<h3>onshape申請帳號</h3>
<p><a href="https://youtu.be/uK8jKE1oa8M">https://youtu.be/uK8jKE1oa8M</a></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/uK8jKE1oa8M" width="560"></iframe></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<h3>onshape操作方法</h3>
<p><a href="https://youtu.be/Up3r2_SiuHI">https://youtu.be/Up3r2_SiuHI</a></p>
<p><img alt="" height="313" src="/images/設定1-1.png" width="567"/></p>
<p></p>
<p><img alt="" height="313" src="/images/設定2-2.png" width="566"/></p>
<p><img alt="" height="303" src="/images/設定3-3.png" width="569"/></p>
<p><img alt="" height="297" src="/images/設定4-4.png" width="557"/></p>
<p></p>
<h1>HW1-1</h1>
<p>HW1-1 佔學期成績 15%</p>
<p><span style="background-color: #ffff99;">HW1-1 必須在 2021.12.01 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/6">HW1-1 具體項目成果回報區</a>將於 2021.11.18 開啟, 於 <span style="background-color: #ff99cc;">2021.12.01 22:00 關閉.</span></p>
<h4>作業 1-1: Mirobot 機械手臂場景組合</h4>
<p>說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中六個自由度的 Mirobot 機械手臂.</p>
<p><a href="https://drive.google.com/file/d/1hnoMQ1Hh_Hgdxh7Aym4q43DzLjOWUanR/view?usp=sharing">mirobot_part1_to_part5.7z</a> 為取自  <a href="https://github.com/wlkata/Mirobot-STL">https://github.com/wlkata/Mirobot-STL</a> 的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制各軸作動旋轉的運動模型.</p>
<p>請根據 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中的說明, 完成各項指定任務.</p>
<h1>HW2</h1>
<p>HW2 佔學期成績 20%</p>
<p><span style="background-color: #ffff99;">HW2 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/7">HW2 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉.</span></p>
<p>meArm 逆向運動學與網際參數式 CAD API 結合應用.</p>
<p>請將 <a href="https://github.com/mdecourse/meArm">https://github.com/mdecourse/meArm</a> 中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制.</p>
<p>請利用 <a href="https://mde.tw/cad2021/content/Task%202.html">Task2</a> 中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求.</p>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenberg.pdf">Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/KINEMATIC ANALYSIS FOR ROBOT ARM.pdf">KINEMATIC ANALYSIS FOR ROBOT ARM.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://codebender.cc/user/MeArm">https://codebender.cc/user/MeArm</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/meArmPi">https://github.com/mdecourse/meArmPi</a></p>
<p style="padding-left: 60px;"><a href="/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf">/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/me-arm-ik">https://github.com/mdecourse/me-arm-ik</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/mearm_model">https://github.com/mdecourse/mearm_model</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html">https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/InefficientSkittleSorter">https://github.com/mdecourse/InefficientSkittleSorter</a></p>
<p style="padding-left: 30px;"><a href="https://mearm.com">https://mearm.com</a></p>
<h1>HW3</h1>
<p>HW3 為選項作業.</p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/9">HW3 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p><a href="https://mde.tw/cad2021/content/Task3.html">https://mde.tw/cad2021/content/Task3.html</a> </p>
<p><a href="https://mde.tw/cad2021/content/Task4.html">https://mde.tw/cad2021/content/Task4.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task5.html">https://mde.tw/cad2021/content/Task5.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task6.html">https://mde.tw/cad2021/content/Task6.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task7.html">https://mde.tw/cad2021/content/Task7.html</a></p>
<p>請從上列 Tasks 中自行選擇項目內容完成 HW3.</p>
<h1>Final Project</h1>
<p>Final Project 佔學期成績 40%</p>
<p><span style="background-color: #ffff99;">2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/8">Final Project 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p>彈性製造系統場景設計與製作</p>
<p>請從 <a href="https://github.com/mdecourse/scenes">https://github.com/mdecourse/scenes</a> 與 <a href="https://github.com/mdecourse/models">https://github.com/mdecourse/models</a> 中選擇場景或模型, 配合 <a href="https://drive.google.com/file/d/1xb1Es8N-FxeG10OSnLNDwwi_tXyNTP9t/view?usp=sharing">cad2021_textbook.pdf</a> (登入 @gm 帳號後下載) 教材中的內容, 自選製作與組立產品, 組合成一個 Flexible Manufacturing System 系統場景.</p>
<p>彈性製造系統內容說明</p>
<h4>範例:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2qc0-yTXBts" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PDSmRPh6TaM" title="YouTube video player" width="560"></iframe></p>
<h2>run</h2>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form>
<p><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></p>
</form><!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div style="width: 100%; height: 100%;"></div>
<div style="width: 100%; height: 100%;">
<h1>W11</h1>
<h2>下載零件</h2>
<p>零件1<a href="/downloads/組合件1 - 1-1.STL">/downloads/組合件1 - 1-1.STL</a></p>
<p>零件2<a href="/downloads/組合件1 - 2-1.STL">/downloads/組合件1 - 2-1.STL</a></p>
<p>零件3<a href="/downloads/組合件1 - 3-1.STL">/downloads/組合件1 - 3-1.STL</a></p>
<p>零件4<a href="/downloads/組合件1 - 4-1.STL">/downloads/組合件1 - 4-1.STL</a></p>
<h2>繪圖過程wink</h2>
<script>
var winkVideoData = {
 <script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="./../downloads/W11.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>模擬場景wink</h2>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="600" width="900">
<source src="./../downloads/W11-1.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<h1>meArm進度</h1>
<p>插入轉軸</p>
<div class="winkVideoPlayOverlayClass"><img alt="" height="346" src="/images/插入轉軸.png" width="578"/></div>
<div class="winkVideoPlayOverlayClass"><a href="https://gist.githubusercontent.com/40971227/4edddd1973f036e7d66a8589c6861d0d/raw/acd67b079c6cc08c428951f35f2d99bb8f4116ae/40971227">模擬程式</a></div>
<div class="winkVideoPlayOverlayClass"></div></div></div></div>